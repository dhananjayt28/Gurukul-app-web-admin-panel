/****************************
 * Title - Dynamically Dropdown Bind
 * Description - Bind Dropdown with JSON value
 * Author - Jayanta Rakshit
 * Copyright - (c) 2018
 * Version - 1.0.0
 * Licence - Nil
 ****************************/
!function (s) { var i = function (t, a, i) { this.e = s(t), this.isDropDown = this.e.is("select"), this.jData = void 0 === typeof a ? [] : a, this.keys = this.geyKeys(this.jData), this.opt = "value" in i ? i.value : NaN, this.data = "data" in i ? i.data : NaN, this.class = "class" in i ? i.class : NaN, this.id = "id" in i ? i.id : NaN, this.name = "name" in i ? i.name : NaN, this.show() }; i.prototype = { geyKeys: function (t) { return void 0 === typeof t ? [] : Object.keys(t) }, clear: function () { this.e.empty() }, valueArray: function (t) { var n = []; if (0 < t.length) { var e = this.opt; s.each(t, function (t, a) { var i = {}; i.text = a[e.text], i.value = a[e.value], n.push(i) }) } return n }, addData: function (t) { var a = this.data; console.log(t), 0 < t.length && s.each(a, function (t, a) { }) }, init: function () { var t = this.valueArray(this.jData), n = this.e; 0 < this.class.length && n.addClass(this.class), 0 < this.id.length && n.attr("id", this.id), 0 < this.name.length && n.attr("name", this.name), s.each(t, function (t, a) { var i = s("<option></option>"); i.val(a.value), i.text(a.text), n.append(i) }) }, show: function () { this.clear(), this.init() } }, s.fn.Dropdown = function (t, a) { s.each(this, function () { return new i(this, t, new n(a)) }) }, s.fn.Dropdown.constractor = i; var n = function (t) { return s.extend({ id: "", class: "", name: "", data: {}, value: {} }, t) } }(jQuery);
